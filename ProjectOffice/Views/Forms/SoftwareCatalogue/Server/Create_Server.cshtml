@model ProjectOffice.Models.Forms.SoftwareCatalogue.Server.Create_Server_Model
@{
    <br />
    <form role="form" data-toggle="validator" method="post" action="/Server/Create_Server_Submit" id="Create_Server_Form">
        <fieldset>
            <!-- Form Name -->
            <!--<legend>Add Server</legend>-->
            <!-- Text input-->
            <div class="form-group has-feedback">
                <label for="Server_Name" class="col-md-4 control-label">@Html.LabelFor(m => m.Name, "Server Name:")</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.TextBoxFor(m => m.Name, new { placeholder = "Server Name", ID = "Server_Name", @class = "form-control", required = "required" })
                    </div>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                </div>
                <label class="help-block with-errors">*@Html.ValidationMessageFor(m => m.Name)</label>
            </div>

            <!-- Text input-->
            <div class="form-group has-feedback">
                <label for="Server_Name" class="col-md-4 control-label">@Html.LabelFor(m => m.IP_Address, "IP Address:")</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.TextBoxFor(m => m.IP_Address, new { placeholder = "000.000.000.000", ID = "IP_Address", @class = "form-control", required = "required" })
                    </div>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                </div>
                <label class="help-block with-errors">*@Html.ValidationMessageFor(m => m.IP_Address)</label>
            </div>

            <!-- Dropdown input-->
            <div class="form-group has-feedback">
                <label class="col-md-4 control-label">@Html.LabelFor(m => m.Operating_Systems_ID, "Operating System:")</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                        @Html.DropDownListFor(m => m.Operating_Systems_ID, Model.GetOperatingSystems(), "Please Select", new { ID = "Server_Operating_Systems_ID", @class = "form-control", required = "required" })
                    </div>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                </div>
                <label class="help-block with-errors">*@Html.ValidationMessageFor(m => m.Operating_Systems_ID) </label>
            </div>

            <!-- Dropdown input-->
            <div class="form-group has-feedback">
                <label class="col-md-4 control-label">@Html.LabelFor(m => m.Server_Types_ID, "Server Type:")</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                        @Html.DropDownListFor(m => m.Server_Types_ID, Model.GetServerTypes(), "Please select", new { ID = "Server_Types_ID", @class = "form-control", required = "required" })
                    </div>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                </div>
                <label class="help-block with-errors">*@Html.ValidationMessageFor(m => m.Server_Types_ID) </label>
            </div>

            <div class="form-group has-feedback">
                <label for="Server_Created" class="col-md-4 control-label">@Html.LabelFor(m => m.Created, "Created:")</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.TextBoxFor(m => m.Created, new { placeholder = "dd/mm/yyyy", ID = "Server_Created", @class = "form-control", required = "required" })
                    </div>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                </div>
                <label class="help-block with-errors">*@Html.ValidationMessageFor(m => m.Created)</label>
            </div>

            <!-- radio checks -->
            <div class="form-group has-feedback">
                <label class="col-md-4 control-label">@Html.LabelFor(m => m.Status, "Status:")</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="radio">
                        <label>
                            @Html.RadioButtonFor(m => m.Status, true, new { required = "required" }) Enabled
                        </label>
                    </div>
                    <div class="radio">
                        <label>
                            @Html.RadioButtonFor(m => m.Status, true, new { required = "required" }) Disabled
                        </label>
                    </div>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                </div>
                <label class="help-block with-errors">*@Html.ValidationMessageFor(m => m.Status)</label>
            </div>

            <!-- Text area -->
            <div class="form-group has-feedback">
                <label class="col-md-4 control-label">@Html.LabelFor(m => m.Comment, "Server Notes:")</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                        @Html.TextAreaFor(m => m.Comment, new { placeholder = "Describe if train / test / live etc.", @class = "form-control", required = "required" })
                    </div>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                </div>
                <label class="help-block with-errors">*@Html.ValidationMessageFor(m => m.Comment) </label>
            </div>

            <!-- Success message -->
            <div class="alert alert-success collapse" role="alert" id="Server_Success_Message">
                <i class="glyphicon glyphicon-thumbs-up"></i> Added Server 
            </div>

            <!-- Error message -->
            <div class="alert alert-danger collapse" role="alert" id="Server_Error_Message">
                <i class="glyphicon glyphicon-thumbs-down"></i> Unable to add server -  
            </div>

            <!-- Button -->
            <div class="form-group">
                <label class="col-md-4 control-label"></label>
                <div class="col-md-4">
                    <button type="submit" class="btn btn-warning" id="Create_Server_Submit">Add Server<span class="glyphicon glyphicon-send"></span></button>
                </div>
            </div>
        </fieldset>
    </form>
    @Scripts.Render("~/bundles/Server")
}