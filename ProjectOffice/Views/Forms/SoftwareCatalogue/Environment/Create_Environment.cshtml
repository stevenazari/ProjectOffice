@model ProjectOffice.Models.Forms.SoftwareCatalogue.Environment.EnvironmentModel
@{
    <br />
    <form role="form" data-toggle="validator" method="post" action="/Environment/save" id="Add_Environment_Form">
        <fieldset>
            <!-- Form Name -->
            <!--<legend>Add Application</legend>-->
            <!-- Text input-->
            <div class="form-group has-feedback">
                <label for="Server_Name" class="col-md-4 control-label">@Html.LabelFor(m => m.Name, "Environment Name:")</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.TextBoxFor(m => m.Name, new { placeholder = "Environment Name", ID = "Name", @class = "form-control", required = "required" })
                    </div>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                </div>
                <label class="help-block with-errors">*@Html.ValidationMessageFor(m => m.Name)</label>
            </div>

            <!-- Dropdown input-->
            <div class="form-group has-feedback">
                <label class="col-md-4 control-label">@Html.LabelFor(m => m.Environment_Type_ID, "Environment Type:")</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                        @Html.DropDownListFor(m => m.Environment_Type_ID, Model.GetEnvironmentTypes(), "Select Environment Type", new { ID = "Environment_Type_ID", @class = "form-control", required = "required" })
                    </div>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                </div>
                <label class="help-block with-errors">*@Html.ValidationMessageFor(m => m.Environment_Type_ID) </label>
            </div>

            <!-- Text area -->
            <div class="form-group has-feedback">
                <label class="col-md-4 control-label">@Html.LabelFor(m => m.Comment, "Environment Notes:")</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                        @Html.TextAreaFor(m => m.Comment, new { placeholder = "Description", @class = "form-control", required = "required" })
                    </div>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                </div>
                <label class="help-block with-errors">*@Html.ValidationMessageFor(m => m.Comment) </label>
            </div>

            <!-- Success message -->
            <div class="alert alert-success collapse" role="alert" id="Create_Environment_Success_Message">
                Created environment <i class="glyphicon glyphicon-thumbs-up"></i>
            </div>

            <!-- Error message -->
            <div class="alert alert-danger collapse" role="alert" id="Create_Environment_Error_Message">
                Unable to create environment - either the environment already exists, or a key field is missing. <i class="glyphicon glyphicon-thumbs-down"></i>
            </div>

            <!-- Button -->
            <div class="form-group">
                <label class="col-md-4 control-label"></label>
                <div class="col-md-4">
                    <button type="submit" class="btn btn-warning" id="Create_Environment_Submit">Create Environment<span class="glyphicon glyphicon-send"></span></button>
                </div>
            </div>
        </fieldset>
    </form>
    @Scripts.Render("~/bundles/Environment")
}